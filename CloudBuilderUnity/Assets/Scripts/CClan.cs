// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 4.0.30319.1
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------
using System;
using LitJson;

namespace CloudBuilderLibrary {
	public class CClan
	{
		public CClan()
		{
		}

		public void Setup(JsonData configuration) {
			apiKey = configuration.GetString("key");
			apiSecret = configuration.GetString("secret");
			// TODO support predefined constants
			server = configuration.GetString("env");
			if (apiKey == null || apiSecret == null) {
				throw new ArgumentException("key, secret required");
			}

			CloudBuilder.HttpClient.VerboseMode = configuration.GetBool("httpVerbose");
			sdkVersion = configuration.GetString("sdkVersion");
		}

		public void LoginAnonymous() {
			JsonData config = new JsonData();
			config["device"] = CloudBuilder.SystemFunctions.CollectDeviceInformation();

			HttpRequest req = MakeUnauthenticatedHttpRequest("/v1/login/anonymous");
			req.BodyJson = config;
			req.Callback = (HttpResponse response, Exception exception) => {
				CloudBuilder.Log(LogLevel.Verbose, "Request done with " + response.BodyString + ", " + exception);
			};
			CloudBuilder.HttpClient.Run(req);
		}

		#region Private
		private HttpRequest MakeUnauthenticatedHttpRequest(string path) {
			HttpRequest result = new HttpRequest();
			// TODO
			result.Url = server + path;
			result.Headers["x-apikey"] = apiKey;
			result.Headers["x-sdkversion"] = sdkVersion;
			result.Headers["x-apisecret"] = apiSecret;
			return result;
		}
		#endregion

		#region Members
		private string apiKey, apiSecret, sdkVersion, server;
		#endregion
	}
}
