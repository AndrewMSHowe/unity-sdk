// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 4.0.30319.1
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------
using System;
using LitJson;
using System.Collections;
using System.Collections.Specialized;


namespace CloudBuilderLibrary
{
    public static class LitJsonExtensions
    {
		public static bool GetBool(this LitJson.JsonData me, string key, bool defaultValue = false) {
			return (me as IOrderedDictionary).Contains(key) ? (bool) me[key] : defaultValue;
		}
		public static double GetDouble(this LitJson.JsonData me, string key, double defaultValue = 0) {
			return (me as IOrderedDictionary).Contains(key) ? (double) me[key] : defaultValue;
		}
		public static int GetInt(this LitJson.JsonData me, string key, int defaultValue = 0) {
			return (me as IOrderedDictionary).Contains(key) ? (int) me[key] : defaultValue;
		}
		public static long GetLong(this LitJson.JsonData me, string key, long defaultValue = 0) {
			return (me as IOrderedDictionary).Contains(key) ? (long) me[key] : defaultValue;
		}
		public static JsonData GetSafe(this LitJson.JsonData me, string key) {
			return (me as IOrderedDictionary).Contains(key) ? me[key] : new JsonData();
		}
		public static string GetString(this LitJson.JsonData me, string key, string defaultValue = null) {
			return (me as IOrderedDictionary).Contains(key) ? (string) me[key] : defaultValue;
		}

		public static bool Has(this LitJson.JsonData me, string key) {
			return (me as IOrderedDictionary).Contains(key);
		}
    }

}

